<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

  <description>Hibernate数据源配置文件</description>

  <!-- 启动对@AspectJ注解的支持 -->
  <aop:aspectj-autoproxy/>

  <!-- 数据源配置（使用阿里巴巴数据源）-->
  <jee:jndi-lookup id="snsDataSource" jndi-name="java:comp/env/jdbc/sns"/>

  <!-- Hibernate Session工厂配置 -->
  <bean id="sessionFactory-sns"
    class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="snsDataSource"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.jdbc.batch_size">50</prop>
      </props>
    </property>
    <property name="packagesToScan">
      <list>
        <value>com.smate.center.job.**.po</value>
        <value>com.smate.center.job.business.**.model</value>
        <value>com.smate.core.base.file.model</value>
        <value>com.smate.core.base.utils.model</value>
      </list>
    </property>
  </bean>

  <!-- 事务管理器配置,单数据源事务 -->
  <bean id="transactionManager-sns" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory-sns"/>
  </bean>

  <!-- 使用annotation定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager-sns"/>

  <!--&lt;!&ndash;开启事务切面，配置需要事务的方法名匹配规则&ndash;&gt;-->
  <!--<tx:advice id="txAdvice" transaction-manager="transactionManager-sns">-->
    <!--<tx:attributes>-->
      <!--<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
      <!--<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
      <!--<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
      <!--<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
      <!--<tx:method name="batch*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>-->
      <!--<tx:method name="*" read-only="true"/>-->
    <!--</tx:attributes>-->
  <!--</tx:advice>-->

  <!--&lt;!&ndash; 配置事务切入点，以及把事务切入点和事务属性关联起来 &ndash;&gt;-->
  <!--<aop:config proxy-target-class="true">-->
    <!--<aop:pointcut expression="execution(* com.smate..*.service..*.*(..))"-->
      <!--id="serviceTxPC" />-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceTxPC" />-->
  <!--</aop:config>-->

</beans>