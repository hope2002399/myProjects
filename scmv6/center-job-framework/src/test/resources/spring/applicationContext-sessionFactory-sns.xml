<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd

	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
  default-lazy-init="false">

  <description>Spring SessionFactory配置文件</description>

  <!-- 启动对@AspectJ注解的支持 -->
  <aop:aspectj-autoproxy/>

  <!-- 数据源配置,使用应用服务器的数据库连接池 -->
  <bean id="snsDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
    <property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.15.190:1521:ora11g"/>
    <property name="user" value="scholar2"/>
    <property name="password" value="scholar2"/>

    <!--连接池中保留的最小连接数。 -->
    <property name="minPoolSize">
      <value>5</value>
    </property>

    <!--连接池中保留的最大连接数。Default: 15 -->
    <property name="maxPoolSize">
      <value>2</value>
    </property>

    <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
    <property name="initialPoolSize">
      <value>1</value>
    </property>

    <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
    <property name="maxIdleTime">
      <value>120</value>
    </property>

    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
    <property name="acquireIncrement">
      <value>1</value>
    </property>

    <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
        如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
    <property name="maxStatements">
      <value>0</value>
    </property>

    <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
    <property name="idleConnectionTestPeriod">
      <value>60</value>
    </property>

    <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
    <property name="acquireRetryAttempts">
      <value>30</value>
    </property>

    <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
        获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
    <property name="breakAfterAcquireFailure">
      <value>true</value>
    </property>

    <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
        等方法来提升连接测试的性能。Default: false -->
    <property name="testConnectionOnCheckout">
      <value>false</value>
    </property>
  </bean>

  <!-- Hibernate配置 -->
  <bean id="sessionFactory-sns"
    class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="snsDataSource"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
        <prop key="hibernate.show_sql">false</prop>
        <prop key="hibernate.format_sql">false</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.jdbc.batch_size">50</prop>
        <!-- <prop key="hibernate.search.default.indexBase">${hibernate.search_index_direct}</prop> -->
      </props>
    </property>
    <property name="packagesToScan">
      <list>
        <value>com.smate.center.job.common.po</value>
      </list>
    </property>
  </bean>


  <!-- 事务管理器配置,单数据源事务 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory-sns"/>
  </bean>

  <!-- 使用annotation定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>